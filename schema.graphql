### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Category {
  hash: String!
  id: Int!
  questions: [Question!]!
  round: Round!
  title: String!
}

input CategoryWhereUniqueInput {
  hash: String
  id: Int
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

scalar DateTime

type Mutation {
  createPack(timeout: Int, title: String!): Pack!
  deletePack(id: Int!): Pack
  publishPack(id: Int): Pack
  signIn(email: String!, password: String!): AuthPayload!
  signUp(user: UserCreateInput): AuthPayload!
  updatePack(id: Int!, timeout: Int = null, title: String!): Pack!
  updateUser(user: UserUpdateInput): User!
}

type Pack {
  author: User!
  createdAt: DateTime!
  deletedAt: DateTime
  hash: String!
  id: Int!
  isPublished: Boolean!
  rounds: [Round!]!
  title: String!
  updatedAt: DateTime!
}

type Query {
  getMyPacks(searchString: String): [Pack!]!
  getPackByHash(hash: String): Pack
  getPackById(id: Int): Pack
  getPacks(searchString: String): [Pack!]!
  me: User
}

type Question {
  answer: String
  audio: String
  category: Category!
  hash: String!
  id: Int!
  image: String
  imageAnswer: String
  price: Int!
  text: String
  timeout: Int
  type: QuestionType!
}

scalar QuestionType

type Round {
  categories(after: CategoryWhereUniqueInput, before: CategoryWhereUniqueInput, first: Int, last: Int): [Category!]!
  id: Int!
  isFinal: Boolean!
  pack: Pack!
  timeout: Int
}

type Subscription {
  userSignedIn(userId: Int!): User!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  createdAt: DateTime!
  email: String!
  id: Int!
  name: String
  packs: [Pack!]!
  password: String!
  updatedAt: DateTime!
}

input UserCreateInput {
  email: String!
  name: String
  password: String!
}

input UserUpdateInput {
  name: String
}
